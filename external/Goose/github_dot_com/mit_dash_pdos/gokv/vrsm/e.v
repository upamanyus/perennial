(* autogenerated from github.com/mit-pdos/gokv/vrsm/e *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_dot_com.tchajed.marshal.

Section code.
Context `{ext_ty: ext_types}.
Local Coercion Var' s: expr := Var s.

Definition Error: ty := uint64T.

Definition None : expr := #0.

Definition Stale : expr := #1.

Definition OutOfOrder : expr := #2.

Definition Timeout : expr := #3.

Definition EmptyConfig : expr := #4.

Definition NotLeader : expr := #5.

Definition Sealed : expr := #6.

Definition LeaseExpired : expr := #7.

Definition Leased : expr := #8.

Definition EncodeError: val :=
  rec: "EncodeError" "err" :=
    return: (marshal.WriteInt (NewSliceWithCap byteT #0 #8) (![uint64T] "err")).

Definition DecodeError: val :=
  rec: "DecodeError" "enc" :=
    let: <> := ref_zero (slice.T byteT) in
    let: "err" := ref_zero uint64T in
    let: ("$a0", "$a1") := marshal.ReadInt (![slice.T byteT] "enc") in
    "$a1";;
    "err" <-[uint64T] "$a0";;
    return: (![uint64T] "err").

End code.

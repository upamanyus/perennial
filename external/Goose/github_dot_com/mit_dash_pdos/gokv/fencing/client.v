(* autogenerated from github.com/mit-pdos/gokv/fencing/client *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_dot_com.mit_dash_pdos.gokv.fencing.config.
From Goose Require github_dot_com.mit_dash_pdos.gokv.fencing.frontend.
From Goose Require github_dot_com.mit_dash_pdos.gokv.grove__ffi.

From Perennial.goose_lang Require Import ffi.grove_prelude.

Definition Clerk := struct.decl [
  "configCk" :: ptrT;
  "frontendCk" :: ptrT
].

Definition Clerk__FetchAndIncrement: val :=
  rec: "Clerk__FetchAndIncrement" "ck" "key" :=
    let: "key" := ref_to uint64T "key" in
    let: "ck" := ref_to ptrT "ck" in
    let: "ret" := ref_zero ptrT in
    let: "$a0" := ref (zero_val uint64T) in
    "ret" <-[ptrT] "$a0";;
    (for: (λ: <>, #true); (λ: <>, Skip) := λ: <>,
      let: "err" := ref_zero uint64T in
      let: "$a0" := frontend.Clerk__FetchAndIncrement (struct.loadF Clerk "frontendCk" (![ptrT] "ck")) (![uint64T] "key") (![ptrT] "ret") in
      "err" <-[uint64T] "$a0";;
      (if: (![uint64T] "err") = #0
      then Break
      else #());;
      let: "currentFrontend" := ref_zero uint64T in
      let: "$a0" := config.Clerk__Get (struct.loadF Clerk "configCk" (![ptrT] "ck")) in
      "currentFrontend" <-[uint64T] "$a0";;
      let: "$a0" := frontend.MakeClerk (![uint64T] "currentFrontend") in
      struct.storeF Clerk "frontendCk" (![ptrT] "ck") "$a0";;
      #()).

Definition MakeClerk: val :=
  rec: "MakeClerk" "configHost" :=
    let: "configHost" := ref_to uint64T "configHost" in
    let: "ck" := ref_zero ptrT in
    let: "$a0" := struct.alloc Clerk (zero_val (struct.t Clerk)) in
    "ck" <-[ptrT] "$a0";;
    let: "$a0" := config.MakeClerk (![uint64T] "configHost") in
    struct.storeF Clerk "configCk" (![ptrT] "ck") "$a0";;
    let: "currentFrontend" := ref_zero uint64T in
    let: "$a0" := config.Clerk__Get (struct.loadF Clerk "configCk" (![ptrT] "ck")) in
    "currentFrontend" <-[uint64T] "$a0";;
    let: "$a0" := frontend.MakeClerk (![uint64T] "currentFrontend") in
    struct.storeF Clerk "frontendCk" (![ptrT] "ck") "$a0";;
    return: (![ptrT] "ck").

(* autogenerated from github.com/mit-pdos/gokv/dmvcc/txn *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.index.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.prophname.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txncoordinator.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txnmgr.
From Goose Require github_dot_com.mit_dash_pdos.vmvcc.trusted__proph.
From Goose Require github_dot_com.tchajed.goose.machine.

Section code.
Context `{ext_ty: ext_types}.
Local Coercion Var' s: expr := Var s.

Definition Clerk := struct.decl [
  "p" :: ProphIdT;
  "tid" :: uint64T;
  "writes" :: mapT stringT;
  "indexCk" :: ptrT;
  "txnMgrHost" :: ptrT;
  "txnCoordCk" :: ptrT
].

Definition Begin: val :=
  rec: "Begin" "txnMgrHost" "txnCoordHost" "indexHost" :=
    struct.new Clerk [
      "p" ::= prophname.Get #();
      "tid" ::= txnmgr.Server__New "txnMgrHost";
      "writes" ::= NewMap uint64T stringT #();
      "indexCk" ::= index.MakeClerk "indexHost";
      "txnMgrHost" ::= "txnMgrHost";
      "txnCoordCk" ::= txncoordinator.MakeClerk "txnCoordHost"
    ].

Definition Clerk__Put: val :=
  rec: "Clerk__Put" "txnCk" "key" "val" :=
    MapInsert (struct.loadF Clerk "writes" "txnCk") "key" "val";;
    #().

Definition Clerk__Get: val :=
  rec: "Clerk__Get" "txnCk" "key" :=
    let: ("val1", "ok") := MapGet (struct.loadF Clerk "writes" "txnCk") "key" in
    (if: "ok"
    then "val1"
    else
      let: "val2" := index.Clerk__Read (struct.loadF Clerk "indexCk" "txnCk") "key" (struct.loadF Clerk "tid" "txnCk") in
      trusted__proph.ResolveRead (struct.loadF Clerk "p" "txnCk") (struct.loadF Clerk "tid" "txnCk") "key";;
      "val2").

Definition Clerk__abort: val :=
  rec: "Clerk__abort" "txnCk" :=
    trusted__proph.ResolveAbort (struct.loadF Clerk "p" "txnCk") (struct.loadF Clerk "tid" "txnCk");;
    #().

Definition Clerk__begin: val :=
  rec: "Clerk__begin" "txn" :=
    let: "tid" := txnmgr.Server__New (struct.loadF Clerk "txnMgrHost" "txn") in
    struct.storeF Clerk "tid" "txn" "tid";;
    #().

Definition Clerk__DoTxn: val :=
  rec: "Clerk__DoTxn" "txn" "body" :=
    Clerk__begin "txn";;
    let: "wantToCommit" := "body" "txn" in
    (if: (~ "wantToCommit")
    then
      Clerk__abort "txn";;
      #false
    else txncoordinator.Clerk__TryCommit (struct.loadF Clerk "txnCoordCk" "txn") (struct.loadF Clerk "tid" "txn") (struct.loadF Clerk "writes" "txn")).

End code.

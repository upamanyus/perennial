(* autogenerated from github.com/mit-pdos/gokv/dmvcc/example *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.index.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txn.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txncoordinator.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.txnmgr.
From Goose Require github_dot_com.tchajed.goose.machine.

Section code.
Context `{ext_ty: ext_types}.
Local Coercion Var' s: expr := Var s.

Definition main: val :=
  rec: "main" <> :=
    let: "indexHost" := ref_zero ptrT in
    let: "$a0" := index.MakeServer #() in
    "indexHost" <-[ptrT] "$a0";;
    let: "txnMgrHost" := ref_zero ptrT in
    let: "$a0" := txnmgr.MakeServer #() in
    "txnMgrHost" <-[ptrT] "$a0";;
    let: "txnCoordHost" := ref_zero ptrT in
    let: "$a0" := txncoordinator.MakeServer (![ptrT] "indexHost") in
    "txnCoordHost" <-[ptrT] "$a0";;
    Fork (let: "txnCk" := ref_zero ptrT in
          let: "$a0" := txn.Begin (![ptrT] "txnMgrHost") (![ptrT] "txnCoordHost") (![ptrT] "indexHost") in
          "txnCk" <-[ptrT] "$a0";;
          txn.Clerk__DoTxn (![ptrT] "txnCk") (λ: "t",
            txn.Clerk__Put (![ptrT] "t") #0 #(str"hello");;
            txn.Clerk__Put (![ptrT] "t") #1 #(str"world");;
            return: (#true)
            );;
          #());;
    Fork (let: "txnCk" := ref_zero ptrT in
          let: "$a0" := txn.Begin (![ptrT] "txnMgrHost") (![ptrT] "txnCoordHost") (![ptrT] "indexHost") in
          "txnCk" <-[ptrT] "$a0";;
          txn.Clerk__DoTxn (![ptrT] "txnCk") (λ: "t",
            (if: (StringLength (txn.Clerk__Get (![ptrT] "t") #0)) > #0
            then
              machine.Assert ((StringLength (txn.Clerk__Get (![ptrT] "t") #1)) > #0);;
              #()
            else #());;
            log.Printf #(str"Val on txn2: '%!!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)!(MISSING)s(MISSING)'") (txn.Clerk__Get (![ptrT] "t") #1);;
            return: (#true)
            );;
          #());;
    machine.Sleep #100000000;;
    #().

End code.

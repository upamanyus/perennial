(* autogenerated from github.com/mit-pdos/gokv/dmvcc/txncoordinator *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_dot_com.mit_dash_pdos.gokv.dmvcc.index.

Section code.
Context `{ext_ty: ext_types}.
Local Coercion Var' s: expr := Var s.

(* 0_server.go *)

Definition Server := struct.decl [
  "indexCk" :: ptrT
].

Definition Server__TryCommit: val :=
  rec: "Server__TryCommit" "s" "tid" "writes" :=
    let: "err" := ref_to uint64T #0 in
    MapIter "writes" (λ: "key" <>,
      (if: (![uint64T] "err") = #0
      then "err" <-[uint64T] (index.Clerk__AcquireTuple (struct.loadF Server "indexCk" "s") "key" "tid")
      else #()));;
    (if: (![uint64T] "err") ≠ #0
    then #false
    else
      index.Clerk__UpdateAndRelease (struct.loadF Server "indexCk" "s") "tid" "writes";;
      #true).

Definition MakeServer: val :=
  rec: "MakeServer" "indexHost" :=
    struct.new Server [
      "indexCk" ::= index.MakeClerk "indexHost"
    ].

(* clerk.go *)

Definition Clerk := struct.decl [
  "s" :: ptrT
].

Definition Clerk__TryCommit: val :=
  rec: "Clerk__TryCommit" "ck" "tid" "writes" :=
    Server__TryCommit (struct.loadF Clerk "s" "ck") "tid" "writes".

Definition MakeClerk: val :=
  rec: "MakeClerk" "host" :=
    struct.new Clerk [
      "s" ::= "host"
    ].

End code.

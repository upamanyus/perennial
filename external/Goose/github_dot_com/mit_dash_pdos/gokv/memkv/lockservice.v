(* autogenerated from github.com/mit-pdos/gokv/memkv/lockservice *)
From Perennial.goose_lang Require Import prelude.
From Goose Require github_dot_com.mit_dash_pdos.gokv.connman.
From Goose Require github_dot_com.mit_dash_pdos.gokv.memkv.

From Perennial.goose_lang Require Import ffi.grove_prelude.

Definition LockClerk := struct.decl [
  "kv" :: ptrT
].

Definition LockClerk__Lock: val :=
  rec: "LockClerk__Lock" "ck" "key" :=
    (for: (λ: <>, (~ (memkv.KVClerk__ConditionalPut (struct.loadF LockClerk "kv" (![ptrT] "ck")) (![uint64T] "key") (NewSlice byteT #0) (NewSlice byteT #1)))); (λ: <>, Skip) := λ: <>,
      #()).

Definition LockClerk__Unlock: val :=
  rec: "LockClerk__Unlock" "ck" "key" :=
    memkv.KVClerk__Put (struct.loadF LockClerk "kv" (![ptrT] "ck")) (![uint64T] "key") (NewSlice byteT #0);;
    #().

Definition MakeLockClerk: val :=
  rec: "MakeLockClerk" "lockhost" "cm" :=
    return: (struct.new LockClerk [
       "kv" ::= memkv.MakeKVClerk (![uint64T] "lockhost") (![ptrT] "cm")
     ]).
